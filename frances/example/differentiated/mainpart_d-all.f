C        Generated by TAPENADE     (INRIA, Ecuador team)
C  Tapenade 3.14 (r7260) - 18 Jan 2019 10:11
C
C        Generated by TAPENADE     (INRIA, Ecuador team)
C  Tapenade 3.14 (r7260) - 18 Jan 2019 10:11
C
C  Differentiation of sub1 in forward (tangent) mode:
C   variations   of useful results: res out first third other
C   with respect to varying inputs: first other
C   RW status of diff variables: res:out out:out first:in-out third:out
C                other:in-out
C
      SUBROUTINE SUB1_D(first, firstd, other, otherd, third, thirdd, out
     +                  , outd, res, resd)
      IMPLICIT NONE
      REAL first, other, third, out, res
      REAL firstd, otherd, thirdd, outd, resd
      INCLUDE 'globals.inc'
      INTRINSIC SIN
      INTRINSIC COS
      DOUBLE PRECISION F
      DOUBLE PRECISION F_D
      INTRINSIC EXP
      DOUBLE PRECISION G
      DOUBLE PRECISION G_D
C start mixing all variables :
      outd = firstd*other + first*otherd
      out = first*other + 3.0*third
      resd = firstd*COS(first) - otherd*SIN(other)
      res = SIN(first) + COS(other)
      first = 2.0*first
      thirdd = -(2.0*otherd/other**2)
      third = 2.0/other
C now overwrite some values...
      IF (first .GT. other) THEN
        firstd = -(outd*SIN(out))
        first = COS(out)
        otherd = F_D(out, outd, other)
      ELSE
C ...in one or in all cases
        firstd = outd*EXP(out)
        first = EXP(out)
        otherd = G_D(out, outd, other)
      END IF
      END


C        Generated by TAPENADE     (INRIA, Ecuador team)
C  Tapenade 3.14 (r7260) - 18 Jan 2019 10:11
C
C  Differentiation of f in forward (tangent) mode:
C   variations   of useful results: f
C   with respect to varying inputs: t
      DOUBLE PRECISION FUNCTION F_D(t, td, f)
      IMPLICIT NONE
      DOUBLE PRECISION t
      DOUBLE PRECISION td
      INTRINSIC EXP
      DOUBLE PRECISION f
      f_d = (td*t+t*td)*EXP(t*t)
      f = EXP(t*t)
      RETURN
      END

C  Differentiation of g in forward (tangent) mode:
C   variations   of useful results: g
C   with respect to varying inputs: t
C
      DOUBLE PRECISION FUNCTION G_D(t, td, g)
      IMPLICIT NONE
      DOUBLE PRECISION t
      DOUBLE PRECISION td
      INTRINSIC SIN
      DOUBLE PRECISION g
      g = 1
      IF (t .NE. 0.d0) THEN
        g_d = (td*COS(t)*t-SIN(t)*td)/t**2
        g = SIN(t)/t
      ELSE
        g_d = 0.D0
      END IF
      RETURN
      END


